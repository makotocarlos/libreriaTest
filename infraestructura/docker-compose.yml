version: "3.8"

services:

  # Servicio del Frontend
  frontend:
    build:
      context: ./APIS  # Ajusta la ruta de tu frontend si es necesario
      dockerfile: Dockerfile.front
    ports:
      - "3003:3000"  # Mapea el puerto 3003 del contenedor al puerto 3003 en tu m√°quina local
    depends_on:
      - login_api
      - books_api
      - orders_api
    networks:
      - dev_network
    environment:
      - PORT=3000

  # Servicio del Webserver
  webserver:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - login_api
      - books_api
    networks:
      - dev_network

  # Servicio de la API de Login
  login_api:
    build:
      context: ./APIS
      dockerfile: Dockerfile
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.2'
          memory: 2GB
        reservations:
          cpus: '0.1'
          memory: 1GB
    ports:
      - "3000:3000"
    volumes:
      - ./APIS/login:/usr/loginAPI
    networks:
      - dev_network

  # Servicio de la API de Books
  books_api:
    build:
      context: ./APIS
      dockerfile: Dockerfile.books
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.2'
          memory: 2GB
        reservations:
          cpus: '0.1'
          memory: 1GB
    ports:
      - "3001:3001"
    volumes:
      - ./APIS/books:/usr/booksAPI
    networks:
      - dev_network

  # Servicio de la API de Orders
  orders_api:
    build:
      context: ./APIS
      dockerfile: Dockerfile.orders
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.2'
          memory: 2GB
        reservations:
          cpus: '0.1'
          memory: 1GB
    ports:
      - "3002:3002"
    volumes:
      - ./APIS/orders:/usr/ordersAPI
    networks:
      - dev_network

  # Base de Datos para Login
  db_dev:
    build:                   
      context: ./APIS                                                                                                                                                                                                                                                                                             
      dockerfile: Dockerfile.postgres
    container_name: user_db_dev
    environment:
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: user_db_dev
    ports:
      - "5432:5432"
    volumes:
      - ./data/login_data_dev:/var/lib/postgresql/data
      - ./logs/login_logs:/var/log/postgresql
      - ./APIS/postgresql.configs/postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - dev_network

  # Base de Datos para Books
  books_db:
    build:
      context: ./APIS
      dockerfile: Dockerfile.postgres
    container_name: books_db_dev
    environment:
      POSTGRES_PASSWORD: books12345
      POSTGRES_DB: books_db_dev
    ports:
      - "5433:5432"
    volumes:
      - ./data/books_data_dev:/var/lib/postgresql/data
      - ./logs/books_logs:/var/log/postgresql
      - ./APIS/postgresql.configs/postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - dev_network

  # Base de Datos para Orders
  orders_db:
    build:
      context: ./APIS
      dockerfile: Dockerfile.postgres
    container_name: orders_db_dev
    environment:
      POSTGRES_PASSWORD: orders12345
      POSTGRES_DB: orders_db_dev
    ports:
      - "5434:5432"
    volumes:
      - ./data/orders_data_dev:/var/lib/postgresql/data
      - ./logs/orders_logs:/var/log/postgresql
      - ./APIS/postgresql.configs/postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - dev_network

  # Servicio pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "carlos@guerrero.com"
      PGADMIN_DEFAULT_PASSWORD: "12345"
    ports:
      - "8888:80"
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    depends_on:
      - db_dev
    networks:
      - dev_network

networks:
  dev_network:
    driver: bridge
